version: "3.2"

services:
  # docker-adonis-api:
  #   image: desafiofullstackafiliados
  #   container_name: desafiofullstackafiliados
  #   restart: unless-stopped

  #   # We specify the image for this service and where we can build that image from
  #   build:
  #     context: ./
  #     dockerfile: Dockerfile

  #   # command: bash -c 'while !</dev/tcp/db/3306; do sleep 1; done; npm start'

  #   # We can use these volumes to specify where we want our files to be accessible at.
  #   # It's best to house all node modules on a separate volume
  #   volumes:
  #     - "./:/usr/src/services/api"
  #     # - "./node_modules"
  #   ports:
  #     - "1379:3333"

  #   networks:
  #     - app-network
  #   depends_on:
  #     - adonis-mysql

  #   # For Windows, we need to enable Chokidar polling so our file changes reflect in real-time.
  #   environment:
  #     - CHOKIDAR_USEPOLLING=1

  adonis-mysql:
    image: mysql:5.7
    restart: always
    container_name: adonis-mysql
    healthcheck:
      test: ["CMD", "curl", "-fk", "tcp://localhost:3306"]
      interval: 300s
      timeout: 400s
      retries: 10
    ports:
      - 3306:3306
    expose:
      - "3306"
    # It is best to bind sockets on Windows.
    command: --default-authentication-plugin=mysql_native_password --innodb_use_native_aio=0 --socket=/tmp/mysql.sock --bind_address=0.0.0.0

    # We'd like to be able to access our data files on our local filesystem
    volumes:
      - ./db:/var/lib/mysql

    # It is recommended to not do this in production as it is wildly insecure
    environment:
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'mr-adonis'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      MYSQL_DATABASE: 'adonis-mysql'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'

networks:
  app-network:
    driver: bridge